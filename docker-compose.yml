services:
  web:
    image: web
    build:
      context: .
      dockerfile: src/Web/Dockerfile
    env_file:
      - src/Web/.env
    networks:
      - backend-network
    depends_on:
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ADMIN__USERNAME=admin
      - ADMIN__EMAIL=admin@gmail.com
      - ADMIN__PASSWORD=Admin123
    secrets:
      - nuget_username
      - nuget_password
    ports:
      - "8080:8080"
  
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    restart: always
    networks:
      - backend-network
    environment:
      POSTGRES_DB: "elysium"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "345890"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d elysium",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  
  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: always
    networks:
      - backend-network
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"
  
  minio:
    container_name: minio
    image: minio/minio
    networks:
      - backend-network
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    command: server --console-address ":9001" /data
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 3
      
volumes:
  postgres-data:
  minio-data:

secrets:
  nuget_username:
    file: ./secrets/nuget_username.txt
  nuget_password:
    file: ./secrets/nuget_password.txt

networks:
  backend-network:
    driver: bridge